"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.0.4.
"""

import os  # <-- Añadido para variables de entorno
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent.parent

# Configuraciones de seguridad (¡NO USAR EN PRODUCCIÓN!)
SECRET_KEY = 'django-insecure-bre^tt*%l1u&z#^(o8g3$d3i#9h)7w7fj_k!l92!(p)m1v+4a5'
DEBUG = True
ALLOWED_HOSTS = []

# Aplicaciones instaladas
INSTALLED_APPS = [
    'users',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # <-- Añadido para allauth
    'crispy_forms',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

SITE_ID = 1  # <-- Requerido por allauth

# Middleware
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # <-- Middleware de allauth
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Configuración de templates
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# Base de datos
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Autenticación y usuarios
AUTH_USER_MODEL = 'users.CustomUser'
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Configuración de contraseñas
AUTH_PASSWORD_VALIDATORS = [
    # ... (tus validadores existentes)
]

# Configuración de correo (usa variables de entorno)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.environ.get('EMAIL_USER', 'tu_email@gmail.com')  # <-- Modificado
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASS', 'tu_contraseña')   # <-- Modificado

# Archivos estáticos
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'   # <-- Añadido para producción
STATICFILES_DIRS = [BASE_DIR / 'static'] # <-- Directorio local de static

# Cookies (configuración para desarrollo)
SESSION_COOKIE_SECURE = False    # <-- Cambiado a False
CSRF_COOKIE_SECURE = False       # <-- Cambiado a False

# Configuración de allauth
LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login'
ACCOUNT_LOGOUT_REDIRECT_URL = 'login'

# Proveedor de Google (OAuth)
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['profile', 'email'],
        'AUTH_PARAMS': {'access_type': 'online'}
    }
}

# Otras configuraciones
ROOT_URLCONF = 'core.urls'
WSGI_APPLICATION = 'core.wsgi.application'
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Headers de seguridad (compatibles con desarrollo)
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = 'DENY'
SECURE_SSL_REDIRECT = False  # Solo True en producción
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'http'

